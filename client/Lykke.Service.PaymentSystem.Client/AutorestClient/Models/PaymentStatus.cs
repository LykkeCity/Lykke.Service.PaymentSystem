// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.PaymentSystem.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for PaymentStatus.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum PaymentStatus
    {
        [EnumMember(Value = "Created")]
        Created,
        [EnumMember(Value = "NotifyProcessed")]
        NotifyProcessed,
        [EnumMember(Value = "NotifyDeclined")]
        NotifyDeclined,
        [EnumMember(Value = "Processing")]
        Processing
    }
    internal static class PaymentStatusEnumExtension
    {
        internal static string ToSerializedValue(this PaymentStatus? value)
        {
            return value == null ? null : ((PaymentStatus)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this PaymentStatus value)
        {
            switch( value )
            {
                case PaymentStatus.Created:
                    return "Created";
                case PaymentStatus.NotifyProcessed:
                    return "NotifyProcessed";
                case PaymentStatus.NotifyDeclined:
                    return "NotifyDeclined";
                case PaymentStatus.Processing:
                    return "Processing";
            }
            return null;
        }

        internal static PaymentStatus? ParsePaymentStatus(this string value)
        {
            switch( value )
            {
                case "Created":
                    return PaymentStatus.Created;
                case "NotifyProcessed":
                    return PaymentStatus.NotifyProcessed;
                case "NotifyDeclined":
                    return PaymentStatus.NotifyDeclined;
                case "Processing":
                    return PaymentStatus.Processing;
            }
            return null;
        }
    }
}
